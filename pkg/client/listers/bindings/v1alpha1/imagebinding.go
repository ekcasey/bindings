/*
Copyright 2019 the original author or authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/projectriff/bindings/pkg/apis/bindings/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ImageBindingLister helps list ImageBindings.
type ImageBindingLister interface {
	// List lists all ImageBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ImageBinding, err error)
	// ImageBindings returns an object that can list and get ImageBindings.
	ImageBindings(namespace string) ImageBindingNamespaceLister
	ImageBindingListerExpansion
}

// imageBindingLister implements the ImageBindingLister interface.
type imageBindingLister struct {
	indexer cache.Indexer
}

// NewImageBindingLister returns a new ImageBindingLister.
func NewImageBindingLister(indexer cache.Indexer) ImageBindingLister {
	return &imageBindingLister{indexer: indexer}
}

// List lists all ImageBindings in the indexer.
func (s *imageBindingLister) List(selector labels.Selector) (ret []*v1alpha1.ImageBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ImageBinding))
	})
	return ret, err
}

// ImageBindings returns an object that can list and get ImageBindings.
func (s *imageBindingLister) ImageBindings(namespace string) ImageBindingNamespaceLister {
	return imageBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ImageBindingNamespaceLister helps list and get ImageBindings.
type ImageBindingNamespaceLister interface {
	// List lists all ImageBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ImageBinding, err error)
	// Get retrieves the ImageBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ImageBinding, error)
	ImageBindingNamespaceListerExpansion
}

// imageBindingNamespaceLister implements the ImageBindingNamespaceLister
// interface.
type imageBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ImageBindings in the indexer for a given namespace.
func (s imageBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ImageBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ImageBinding))
	})
	return ret, err
}

// Get retrieves the ImageBinding from the indexer for a given namespace and name.
func (s imageBindingNamespaceLister) Get(name string) (*v1alpha1.ImageBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("imagebinding"), name)
	}
	return obj.(*v1alpha1.ImageBinding), nil
}
