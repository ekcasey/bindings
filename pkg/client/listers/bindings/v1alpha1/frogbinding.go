/*
Copyright 2019 the original author or authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/projectriff/bindings/pkg/apis/bindings/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FrogBindingLister helps list FrogBindings.
type FrogBindingLister interface {
	// List lists all FrogBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FrogBinding, err error)
	// FrogBindings returns an object that can list and get FrogBindings.
	FrogBindings(namespace string) FrogBindingNamespaceLister
	FrogBindingListerExpansion
}

// frogBindingLister implements the FrogBindingLister interface.
type frogBindingLister struct {
	indexer cache.Indexer
}

// NewFrogBindingLister returns a new FrogBindingLister.
func NewFrogBindingLister(indexer cache.Indexer) FrogBindingLister {
	return &frogBindingLister{indexer: indexer}
}

// List lists all FrogBindings in the indexer.
func (s *frogBindingLister) List(selector labels.Selector) (ret []*v1alpha1.FrogBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FrogBinding))
	})
	return ret, err
}

// FrogBindings returns an object that can list and get FrogBindings.
func (s *frogBindingLister) FrogBindings(namespace string) FrogBindingNamespaceLister {
	return frogBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FrogBindingNamespaceLister helps list and get FrogBindings.
type FrogBindingNamespaceLister interface {
	// List lists all FrogBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FrogBinding, err error)
	// Get retrieves the FrogBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FrogBinding, error)
	FrogBindingNamespaceListerExpansion
}

// frogBindingNamespaceLister implements the FrogBindingNamespaceLister
// interface.
type frogBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FrogBindings in the indexer for a given namespace.
func (s frogBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FrogBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FrogBinding))
	})
	return ret, err
}

// Get retrieves the FrogBinding from the indexer for a given namespace and name.
func (s frogBindingNamespaceLister) Get(name string) (*v1alpha1.FrogBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("frogbinding"), name)
	}
	return obj.(*v1alpha1.FrogBinding), nil
}
